import React, { Component } from "react";
import { useTranslation } from 'react-i18next';
import {
    Map,
    GoogleApiWrapper,
    Marker,
    GoogleMap,
    DirectionsRenderer,
    withScriptjs,
    withGoogleMap
} from "google-maps-react";
//import SolidAuth from "solid-auth-client";
//import ldflex from "@solid/query-ldflex";
//import { AccessControlList } from "@inrupt/solid-react-components";



export class MapComponent extends Component {
    constructor(props) {
        super(props);
        this.state = {
            locations: []
        };
        this.handleMapClick = this.handleMapClick.bind(this);
    }

    handleMapClick = (ref, map, ev) => {
        const location = ev.latLng;
        this.setState(prevState => ({
            locations: [...prevState.locations, location]
        }));
        map.panTo(location);
    };
    handleMarcadores = myZoom => {
        console.log("Pulsado ver marcadores guardados:", this.state.user);
        this.setState({ lat: 43.5, lng: -5.5, zoom: myZoom });
    };

    render() {
        const position = [this.state.lat, this.state.lng];
        return (
            <div className="map-container">
                <h1>Map</h1>

                <button
                    onClick={() => this.handleMarcadores(9)}
                    className="btn btn-secondary"
                >
                    Ver marcadores guardados
                </button>
                <span>
                    <p></p>
                </span>
                <Map
                    google={this.props.google}
                    className={"map"}
                    zoom={this.props.zoom}
                    initialCenter={this.props.center}
                    onClick={this.handleMapClick}
                    
                >
                    {this.state.locations.map((location, i) => {
                        return (
                            <Marker
                            
                                key={i}
                                position={{ lat: location.lat(), lng: location.lng() }}
                            />
                        );
                    })}
                </Map>
            </div>
        );
    }
}

export default GoogleApiWrapper({
    apiKey: "AIzaSyDwZUjR7_j6100CdDHxmCvi_Hi7Z681wS8"
})(MapComponent);
<Polyline
                        path={[ { lat: 39.072515, lng: -84.116524 }, { lat: 45.383321536272049, lng:-75.3372987731628 }]}
                        options={{
                            strokeColor: '#00ffff',
                            strokeOpacity: 1,
                            strokeWeight: 2,
                            icons: [{
                                icon: "hello",
                                offset: '0',
                                repeat: '10px'
                            }],
                        }}
                    />